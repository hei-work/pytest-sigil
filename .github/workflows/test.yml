name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} with pytest ${{ matrix.pytest-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
        pytest-version: ["7.4.4", "8.4.2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a  # v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ steps.setup-python.outputs.pytest-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry sync --no-interaction

      - name: Install pytest ${{ matrix.pytest-version }}
        run: |
          poetry run pip install "pytest==${{ matrix.pytest-version }}"
      - name: Run tests
        run: |
          poetry run pytest -vv --log-cli-level=DEBUG tests/
